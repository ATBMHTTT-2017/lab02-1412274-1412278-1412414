--BaÒng dıò aìn
create table DuAn
(
  maDA varchar2(10),
  tenDA varchar2(50),
  kinhPhi number,
  phongChuTri varchar2(10),
  truongDA varchar2(10),
  maMH varchar2(200),
  constraint FK_DuAn_PhongBan  foreign key (phongChuTri) references PhongBan(maPhong),
  constraint FK_DuAn_NhanVien  foreign key (truongDA) references NhanVien(maNV),
  constraint PK_DuAn primary key (maDA),
  constraint Check_KinhPhi check (kinhPhi >= 0)
);

create table xemchitieuduan 
( 
  maDA varchar2(10),
  maNV varchar2(10),
  constraint PK_xemchitieuduan primary key (maDA, maNV),
  constraint FK_xemchitieuduan_NhanVien  foreign key (maNV) references NhanVien(maNV),
  constraint FK_xemchitieuduan_DuAn foreign key (maDA) references DuAn(maDA)
)

--BaÒng chiÒ tiêu
create table ChiTieu
(
  maChiTieu number GENERATED BY DEFAULT AS IDENTITY,
  tenChiTieu varchar2(200),
  soTien varchar2(200),
  duAn varchar2(10),
  constraint FK_ChiTieu_DuAn foreign key (duAn) references DuAn(maDA),
  constraint PK_ChiTieu primary key (maChiTieu)
);

--Taòo procedure thêm dıò aìn
create or replace procedure themDuAn(maDuAn in varchar2, duAn in varchar2, kinhPhiDA in number, phongPhuTrach in varchar2, keymahoa in varchar2)
as
  hashed_keymahoa varchar2(200);
  raw_keymahoa raw(2048);
  typemahoa PLS_INTEGER;
begin
  typemahoa := dbms_crypto.HASH_MD5;
  
  raw_keymahoa := UTL_RAW.CAST_TO_RAW(CONVERT(keymahoa,'AL32UTF8','US7ASCII'));
    
  hashed_keymahoa := rawtohex(dbms_crypto.hash(raw_keymahoa, typemahoa));
    
  insert into DuAn(maDA, tenDA, kinhPhi, phongChuTri, mamh) values(maDuAn, duAn, kinhPhiDA, phongPhuTrach, hashed_keymahoa);
end;

--Thêm dıò aìn
execute themDuAn('DA01', 'DA1 p nhân sıò hcm', 300000000, 'NSHCM', 'vuongngockim');
execute themDuAn('DA02', 'DA1 p nhân sıò hn', 100000000, 'NSHN', 'vuongngockim');
execute themDuAn('DA03', 'DA1 p nhân sıò dn', 200000000, 'NSDN', 'vuongngockim');
execute themDuAn('DA04', 'DA1 p nhân sıò  hp', 150000000, 'NSHP', 'vuongngockim');
execute themDuAn('DA05', 'DA1 p nhân sıò ct', 340000000, 'NSCT', 'vuongngockim');
execute themDuAn('DA06', 'DA1 p kêì toaìn hcm', 450000000, 'KTHCM', 'vuongngockim');
execute themDuAn('DA07', 'DA1 p kêì toaìn hn', 100000000, 'KTHN', 'vuongngockim');
execute themDuAn('DA08', 'DA1 p kêì toaìn dn', 100000000, 'KTDN', 'vuongngockim');
execute themDuAn('DA09', 'DA1 p kêì toaìn hp', 90000000, 'KTHP', 'vuongngockim');
execute themDuAn('DA10', 'DA1 p kêì toaìn ct', 75000000, 'KTCT', 'vuongngockim');
execute themDuAn('DA11', 'DA1 p kêì hoaòch hcm', 130000000, 'KHHCM', 'vuongngockim');
execute themDuAn('DA12', 'DA1 p kêì hoaòch hn', 110000000,  'KHHN', 'vuongngockim');
execute themDuAn('DA13', 'DA1 p kêì hoaòch dn', 110000000,  'KHDN', 'vuongngockim');
execute themDuAn('DA14', 'DA1 p kêì hoaòch hp', 190000000,  'KHHP', 'vuongngockim');
execute themDuAn('DA15', 'DA1 p kêì hoaòch ct', 370000000,  'KHCT', 'vuongngockim');

--Taòo store procedure câòp nhâòt trıõÒng dıò aìn
create procedure capNhatTruongDuAn(duAn in varchar2, nhanVien in varchar2)
as
begin
  update DuAn
  set truongDA = nhanVien
  where maDA = duAn;
end;

--Câòp nhâòt trıõÒng dıò aìn
execute capNhatTruongDuAn('DA01', 'NV21');
execute capNhatTruongDuAn('DA02', 'NV22');
execute capNhatTruongDuAn('DA03', 'NV23');
execute capNhatTruongDuAn('DA04', 'NV24');
execute capNhatTruongDuAn('DA05', 'NV25');
execute capNhatTruongDuAn('DA06', 'NV26');
execute capNhatTruongDuAn('DA07', 'NV27');
execute capNhatTruongDuAn('DA08', 'NV28');
execute capNhatTruongDuAn('DA09', 'NV29');
execute capNhatTruongDuAn('DA10', 'NV30');
execute capNhatTruongDuAn('DA11', 'NV31');
execute capNhatTruongDuAn('DA12', 'NV32');
execute capNhatTruongDuAn('DA13', 'NV33');
execute capNhatTruongDuAn('DA14', 'NV34');
execute capNhatTruongDuAn('DA15', 'NV35');

--Grant quyêÌn thıòc thi dbms_crypto cho lab01
grant execute on dbms_crypto to lab01;

--Taòo procedure encrypt tên chi tiêu
create or replace procedure encrypttenchitieu(key in varchar2, tenchitieu in varchar2, encrypted_tenchitieu out varchar2)
as
  raw_key raw(2048);
  raw_tenchitieu raw(2048);
  encryption_type PLS_INTEGER;
  encrypted_raw_tenchitieu RAW(2048);
begin
  encryption_type := DBMS_CRYPTO.DES_CBC_PKCS5;
  raw_key := UTL_RAW.CAST_TO_RAW(CONVERT(key,'AL32UTF8','US7ASCII'));
  raw_tenchitieu := UTL_RAW.CAST_TO_RAW(CONVERT(tenchitieu,'AL32UTF8','US7ASCII'));
  
  dbms_output.put_line('key chi tiêu: ' || key); 
  
  encrypted_raw_tenchitieu := dbms_crypto.Encrypt(src => raw_tenchitieu,
                                                              typ => encryption_type,
                                                              key => raw_key); 
  
  dbms_output.put_line('key raw chi tiêu: ' || rawtohex(raw_key)); 
    
  encrypted_tenchitieu := rawtohex(encrypted_raw_tenchitieu);
                                                              
  dbms_output.put_line('encrypted chi tiêu: ' || encrypted_tenchitieu);                                                                  
end;

--Taòo store procedure encrypt sôì tiêÌn cuÒa chi tiêu
create or replace procedure encryptsotien(key in varchar2, sotien in number, encrypted_sotien out varchar2)
as
  raw_key raw(2048);
  raw_sotien raw(2048);
  encryption_type PLS_INTEGER;
  encrypted_raw_sotien RAW(2048);
begin
  encryption_type := DBMS_CRYPTO.DES_CBC_PKCS5;
  raw_key := UTL_RAW.CAST_TO_RAW(CONVERT(key,'AL32UTF8','US7ASCII'));
  raw_sotien := UTL_RAW.CAST_TO_RAW(CONVERT(to_char(sotien),'AL32UTF8','US7ASCII'));
  
  dbms_output.put_line('key tiêÌn: ' || key); 
  
  encrypted_raw_sotien := dbms_crypto.Encrypt(src => raw_sotien,
                                                              typ => encryption_type,
                                                              key => raw_key);
                                                              
  dbms_output.put_line('key raw tiêÌn: ' || rawtohex(raw_key)); 
  
  encrypted_sotien := rawtohex(encrypted_raw_sotien);
                                                              
  dbms_output.put_line('encrypted tiêÌn: ' || encrypted_sotien);                                       
end;

--Procedure thêm môòt chi tiêu mõìi
create or replace procedure themchitieu(chitieu in varchar2, tien in number, maduan in varchar2, keymahoa in varchar2)
as
  encrypted_sotien varchar2(200);
  encrypted_chitieu varchar2(200);
  truongduan varchar2(10);
  mamahoa varchar2(200);
  hashed_keymahoa varchar2(200);
  raw_keymahoa raw(2048);
  typemahoa PLS_INTEGER;
  tenduan varchar2(50);
  phongchutriduan varchar2(10);
  keymahoathucsu varchar2(500);
begin
  typemahoa := dbms_crypto.HASH_MD5;

  select truongda into truongduan from lab01.duan where mada = maduan;
  select mamh, tenda, phongchutri into mamahoa, tenduan, phongchutriduan from lab01.duan where mada = maduan;
  
  if mamahoa is null or truongduan is null
  then
    dbms_output.put_line('Không thêÒ thêm chi tiêu');
  else
    dbms_output.put_line('TrıõÒng dıò aìn: ' || truongduan);
    
    raw_keymahoa := UTL_RAW.CAST_TO_RAW(CONVERT(keymahoa,'AL32UTF8','US7ASCII'));
    
    hashed_keymahoa := rawtohex(dbms_crypto.hash(raw_keymahoa, typemahoa));
    
    if truongduan = sys_context('userenv', 'session_user') and mamahoa = hashed_keymahoa
    then
       typemahoa := dbms_crypto.HASH_MD4;
       
      raw_keymahoa := UTL_RAW.CAST_TO_RAW(CONVERT(tenduan,'AL32UTF8','US7ASCII'));
      
      hashed_keymahoa := rawtohex(dbms_crypto.hash(raw_keymahoa, typemahoa));
      
      keymahoathucsu := hashed_keymahoa || phongchutriduan || mamahoa;
      
      dbms_output.put_line('Key maŞ hoìa thıòc sıò: ' || keymahoathucsu);
      lab01.encryptsotien(keymahoathucsu, tien, encrypted_sotien);
      lab01.encrypttenchitieu(keymahoathucsu, chitieu, encrypted_chitieu);
      insert into ChiTieu(tenChiTieu, soTien, duAn) values(encrypted_chitieu, encrypted_sotien, MaDuAn);
    else
      dbms_output.put_line('Không thêÒ thêm chi tiêu');
    end if;
  end if;
end;

--Grant quyêÌn thıòc thi thêm chi tiêu cho trıõÒng dıò aìn
grant execute on lab01.themchitieu to NV21;

--Taòo procedure decrypt thông tin tên dıò aìn
create or replace procedure decrypttenchitieu(key in varchar2, tenchitieu in varchar2, dycrypted_tenchitieu out varchar2)
as
  raw_key raw(2048);
  raw_tenchitieu raw(2048);
  decryption_type PLS_INTEGER;
  dycrypted_raw_tenchitieu RAW(2048);
begin
  decryption_type := DBMS_CRYPTO.DES_CBC_PKCS5;
  raw_key := UTL_RAW.CAST_TO_RAW(CONVERT(key,'AL32UTF8','US7ASCII'));
  raw_tenchitieu := hextoraw(tenchitieu);
  
  --dbms_output.put_line('key chi tiêu: ' || key); 
  
  dycrypted_raw_tenchitieu := dbms_crypto.Decrypt(src => raw_tenchitieu,
                                                              typ => decryption_type,
                                                              key => raw_key); 
  
  --dbms_output.put_line('key raw chi tiêu: ' || rawtohex(raw_key)); 
    
  dycrypted_tenchitieu := CONVERT(UTL_RAW.CAST_TO_VARCHAR2(dycrypted_raw_tenchitieu),'US7ASCII','AL32UTF8');
                                                              
  --dbms_output.put_line('dycrypted chi tiêu: ' || dycrypted_tenchitieu);                                                                  
end;

--Taòo procedure decrypt thông tin tên dıò aìn
create or replace procedure decryptsotien(key in varchar2, sotien in varchar2, dycrypted_sotien out number)
as
  raw_key raw(2048);
  raw_sotien raw(2048);
  decryption_type PLS_INTEGER;
  dycrypted_raw_sotien RAW(2048);
  dycrypted_sotien_char varchar(200);
begin
  decryption_type := DBMS_CRYPTO.DES_CBC_PKCS5;
  raw_key := UTL_RAW.CAST_TO_RAW(CONVERT(key,'AL32UTF8','US7ASCII'));
  raw_sotien := hextoraw(sotien);
  
  --dbms_output.put_line('Key sôì tiêÌn: ' || key); 
  
  dycrypted_raw_sotien := dbms_crypto.Decrypt(src => raw_sotien,
                                                              typ => decryption_type,
                                                              key => raw_key); 
  
  --dbms_output.put_line('key raw sôì tiêÌn: ' || rawtohex(raw_key)); 
    
  dycrypted_sotien_char := CONVERT(UTL_RAW.CAST_TO_VARCHAR2(dycrypted_raw_sotien),'US7ASCII','AL32UTF8');
  
  dycrypted_sotien := to_number(dycrypted_sotien_char);
                                                              
  --dbms_output.put_line('dycrypted sôì tiêÌn: ' || dycrypted_sotien);                                                                  
end;

--Taòo type chitieu_obj
create type chitieu_obj is object(machitieu varchar2(10), tenchitieu varchar2(50), sotien number, duan varchar2(10));

--Taòo taòo chitieu_tab
create type chitieu_tab is table of chitieu_obj;

--Taòo procedure xem chi tiêu
create or replace procedure xemchitieu(keymahoa in varchar2, maduan in varchar2, chitieutable out chitieu_tab)
as
  mamahoa varchar2(200);
  hashed_keymahoa varchar2(200);
  raw_keymahoa raw(2048);
  typemahoa PLS_INTEGER;
  tenduan varchar2(50);
  phongchutriduan varchar2(10);
  keymahoathucsu varchar2(500);
  tenchitieu varchar2(50);
  sotien number;
  i number := 0;
  truongduan varchar2(10);
  nhanvien number;
begin
  chitieutable := chitieu_tab();

   typemahoa := dbms_crypto.HASH_MD5;
   
  select truongda into truongduan from lab01.duan where mada = maduan;
  select mamh, tenda, phongchutri into mamahoa, tenduan, phongchutriduan from lab01.duan where mada = maduan;
  select case when exists(select maNV from lab01.xemchitieuduan where maNV = sys_context('userenv', 'session_user'))  then 1 else 0 end into nhanvien from dual;
  
  if mamahoa is null or truongduan is null
  then
    dbms_output.put_line('Không thêÒ xem chi tiêu');
  else   
  
    raw_keymahoa := UTL_RAW.CAST_TO_RAW(CONVERT(keymahoa,'AL32UTF8','US7ASCII'));
    
    hashed_keymahoa := rawtohex(dbms_crypto.hash(raw_keymahoa, typemahoa));
    
    if (truongduan = sys_context('userenv', 'session_user') or nhanvien = 1) and mamahoa = hashed_keymahoa
    then
      typemahoa := dbms_crypto.HASH_MD4;
       
      raw_keymahoa := UTL_RAW.CAST_TO_RAW(CONVERT(tenduan,'AL32UTF8','US7ASCII'));
      
      hashed_keymahoa := rawtohex(dbms_crypto.hash(raw_keymahoa, typemahoa));
      
      keymahoathucsu := hashed_keymahoa || phongchutriduan || mamahoa;
        
      --dbms_output.put_line('Key maŞ hoìa thıòc sıò: ' || keymahoathucsu);
     
        for chitieu in (select machitieu, tenchitieu, sotien, duan from lab01.chitieu where duan = maduan)
        loop
          chitieutable.extend;
          i := i + 1;
          lab01.decrypttenchitieu(keymahoathucsu, chitieu.tenchitieu, tenchitieu);
          lab01.decryptsotien(keymahoathucsu, chitieu.sotien, sotien);
          --dbms_output.put_line('Sôì tiêÌn ğıõòc decrypt trong procedure xemchitieu: ' || sotien);
          chitieutable(i) := chitieu_obj(chitieu.machitieu, tenchitieu, sotien, chitieu.duan);
          --dbms_output.put_line('Sôì tiêÌn ' || i || ': ' || chitieutable(i).sotien);
        end loop;
    end if;
  end if;
end;

--Grant quyêÌn sıÒ duòng type cho trıõÒng dıò aìn vaÌ quyêÌn sıÒ duòng procedure xemchitieu
grant execute on lab01.xemchitieu to NV21 with grant option;
grant all on lab01.chitieu_obj to NV21 with grant option;
grant all on lab01.chitieu_tab to NV21 with grant option;

--KiêÒm tra kêìt quaÒ
execute lab01.themchitieu('Mua hoa', 5000, 'DA01', 'vuongngockim');

declare
  chitieutable lab01.chitieu_tab;
begin
  chitieutable:= lab01.chitieu_tab();
  lab01.xemchitieu('vuongngockim', 'DA01', chitieutable);
  dbms_output.put_line('MaŞ chi tiêu' || '  ' ||  'Tên chi tiêu' || '  ' || 'Sôì tiêÌn' || '  ' ||  'Dıò aìn');
  for r in (select * from table (chitieutable))
  loop
      dbms_output.put_line(r.machitieu || '                 ' ||  r.tenchitieu || '      ' || r.sotien || '    ' ||  r.duan);
  end loop;
end;